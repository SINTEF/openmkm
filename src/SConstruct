env = Environment(CPPPATH=[
		           "/sw/cantera_install/include",
		           "/sw/cantera_install/include/cantera/ext",
                           #"/home/mbkumar/Research/Software/cantera/include", 
                           #"/home/mbkumar/Software/cantera/include", 
                           #"/home/mbkumar/Research/Software/cantera/ext/eigen",
                           ],
                  CCFLAGS=["-std=c++11", "-Wall", "-Wno-inline", "-O0",
                           "-g",
                           "-fprofile-arcs", "-ftest-coverage", "-pthread"],
                  LINKFLAGS = ["-fprofile-arcs", "-ftest-coverage", "-pthread", "-g", "-std=c++11"])

sources = ["main.cpp", "util.cpp", "zerodReactor.cpp", "onedReactor.cpp", 
           "io.cpp", "pfr1d.cpp", "pfr1d_solver.cpp", #"hctexceptions.cpp", 
           "IdealGasTRampReactor.cpp", "reactor_parser.cpp",
           "NonLinearSolver.cpp", "KIN_Solver.cpp", "ReactorNetHybrid.cpp"
           ]

env.Program(target="omkm", source=sources, 
            LIBS=["cantera", #"sundials_cvodes", "sundials_idas", 
                  #"sundials_kinsol", "sundials_nvecserial",  
                  "yaml-cpp", 
            #LIBS=["cantera", "sundials_cvodes", "sundials_idas", 
            #      "sundials_kinsol", "sundials_nvecserial",  "yaml-cpp", 
                  "boost_filesystem", "boost_system"],
            #LIBPATH=["/home/mbkumar/Software/cantera/install/lib64", "/usr/local/lib" ])
            LIBPATH=["/sw/cantera_install/lib"])
            #LIBPATH=["/home/mbkumar/Research/Software/cantera/build/lib", 
            #         "/usr/local/lib"])
